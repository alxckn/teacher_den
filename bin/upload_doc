#!/usr/bin/env ruby
require 'optparse'
require 'uri'
require 'rest_client'

options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: upload_doc [options]"

  opts.on('-a', '--address ADDRESS', 'Site address') { |v| options[:address] = v }
  opts.on('-c', '--category CATEGORY', 'Category name') { |v| options[:category] = v }
  opts.on('-f', '--file FILEPATH', 'File path') { |v| options[:file] = v }
  opts.on('-u', '--username USERNAME', 'Username') { |v| options[:username] = v }
  opts.on('-p', '--password PASSWORD', 'Password') { |v| options[:password] = v }

  opts.on('-h', '--help', 'Help') do
    puts opts
    exit
  end
end

begin
  optparse.parse!
  mandatory = [:address, :category, :file, :username, :password]
  missing = mandatory.select{ |param| options[param].nil? }
  unless missing.empty?
    raise OptionParser::MissingArgument.new(missing.join(', '))
  end
rescue OptionParser::InvalidOption, OptionParser::MissingArgument
  puts $!.to_s
  puts optparse
  exit
end

uri = File.join(options[:address], "/api/v1/", "documents")
response = RestClient::Request.new(
  method: :post,
  url: uri.to_s,
  user: options[:username],
  password: options[:password],
  payload: {
    document: {
      category: options[:category],
      file: File.new(options[:file])
    }
  }
).execute do |response, request, result|
  puts result.message
  puts response.body
end
